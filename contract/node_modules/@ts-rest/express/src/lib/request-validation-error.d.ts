import { z } from 'zod';
export declare class RequestValidationError extends Error {
    pathParams: z.ZodError | null;
    headers: z.ZodError | null;
    query: z.ZodError | null;
    body: z.ZodError | null;
    constructor(pathParams: z.ZodError | null, headers: z.ZodError | null, query: z.ZodError | null, body: z.ZodError | null);
}
export declare const DefaultRequestValidationErrorSchema: z.ZodObject<{
    name: z.ZodLiteral<"ZodError">;
    issues: z.ZodArray<z.ZodObject<{
        path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
        message: z.ZodOptional<z.ZodString>;
        code: z.ZodNativeEnum<{
            invalid_type: "invalid_type";
            invalid_literal: "invalid_literal";
            custom: "custom";
            invalid_union: "invalid_union";
            invalid_union_discriminator: "invalid_union_discriminator";
            invalid_enum_value: "invalid_enum_value";
            unrecognized_keys: "unrecognized_keys";
            invalid_arguments: "invalid_arguments";
            invalid_return_type: "invalid_return_type";
            invalid_date: "invalid_date";
            invalid_string: "invalid_string";
            too_small: "too_small";
            too_big: "too_big";
            invalid_intersection_types: "invalid_intersection_types";
            not_multiple_of: "not_multiple_of";
            not_finite: "not_finite";
        }>;
    }, "strip", z.ZodAny, z.objectOutputType<{
        path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
        message: z.ZodOptional<z.ZodString>;
        code: z.ZodNativeEnum<{
            invalid_type: "invalid_type";
            invalid_literal: "invalid_literal";
            custom: "custom";
            invalid_union: "invalid_union";
            invalid_union_discriminator: "invalid_union_discriminator";
            invalid_enum_value: "invalid_enum_value";
            unrecognized_keys: "unrecognized_keys";
            invalid_arguments: "invalid_arguments";
            invalid_return_type: "invalid_return_type";
            invalid_date: "invalid_date";
            invalid_string: "invalid_string";
            too_small: "too_small";
            too_big: "too_big";
            invalid_intersection_types: "invalid_intersection_types";
            not_multiple_of: "not_multiple_of";
            not_finite: "not_finite";
        }>;
    }, z.ZodAny, "strip">, z.objectInputType<{
        path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
        message: z.ZodOptional<z.ZodString>;
        code: z.ZodNativeEnum<{
            invalid_type: "invalid_type";
            invalid_literal: "invalid_literal";
            custom: "custom";
            invalid_union: "invalid_union";
            invalid_union_discriminator: "invalid_union_discriminator";
            invalid_enum_value: "invalid_enum_value";
            unrecognized_keys: "unrecognized_keys";
            invalid_arguments: "invalid_arguments";
            invalid_return_type: "invalid_return_type";
            invalid_date: "invalid_date";
            invalid_string: "invalid_string";
            too_small: "too_small";
            too_big: "too_big";
            invalid_intersection_types: "invalid_intersection_types";
            not_multiple_of: "not_multiple_of";
            not_finite: "not_finite";
        }>;
    }, z.ZodAny, "strip">>, "many">;
}, "strip", z.ZodTypeAny, {
    name: "ZodError";
    issues: z.objectOutputType<{
        path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
        message: z.ZodOptional<z.ZodString>;
        code: z.ZodNativeEnum<{
            invalid_type: "invalid_type";
            invalid_literal: "invalid_literal";
            custom: "custom";
            invalid_union: "invalid_union";
            invalid_union_discriminator: "invalid_union_discriminator";
            invalid_enum_value: "invalid_enum_value";
            unrecognized_keys: "unrecognized_keys";
            invalid_arguments: "invalid_arguments";
            invalid_return_type: "invalid_return_type";
            invalid_date: "invalid_date";
            invalid_string: "invalid_string";
            too_small: "too_small";
            too_big: "too_big";
            invalid_intersection_types: "invalid_intersection_types";
            not_multiple_of: "not_multiple_of";
            not_finite: "not_finite";
        }>;
    }, z.ZodAny, "strip">[];
}, {
    name: "ZodError";
    issues: z.objectInputType<{
        path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
        message: z.ZodOptional<z.ZodString>;
        code: z.ZodNativeEnum<{
            invalid_type: "invalid_type";
            invalid_literal: "invalid_literal";
            custom: "custom";
            invalid_union: "invalid_union";
            invalid_union_discriminator: "invalid_union_discriminator";
            invalid_enum_value: "invalid_enum_value";
            unrecognized_keys: "unrecognized_keys";
            invalid_arguments: "invalid_arguments";
            invalid_return_type: "invalid_return_type";
            invalid_date: "invalid_date";
            invalid_string: "invalid_string";
            too_small: "too_small";
            too_big: "too_big";
            invalid_intersection_types: "invalid_intersection_types";
            not_multiple_of: "not_multiple_of";
            not_finite: "not_finite";
        }>;
    }, z.ZodAny, "strip">[];
}>;
export declare const CombinedRequestValidationErrorSchema: z.ZodObject<{
    pathParameterErrors: z.ZodNullable<z.ZodObject<{
        name: z.ZodLiteral<"ZodError">;
        issues: z.ZodArray<z.ZodObject<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, "strip", z.ZodAny, z.objectOutputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">, z.objectInputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">>, "many">;
    }, "strip", z.ZodTypeAny, {
        name: "ZodError";
        issues: z.objectOutputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    }, {
        name: "ZodError";
        issues: z.objectInputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    }>>;
    headerErrors: z.ZodNullable<z.ZodObject<{
        name: z.ZodLiteral<"ZodError">;
        issues: z.ZodArray<z.ZodObject<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, "strip", z.ZodAny, z.objectOutputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">, z.objectInputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">>, "many">;
    }, "strip", z.ZodTypeAny, {
        name: "ZodError";
        issues: z.objectOutputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    }, {
        name: "ZodError";
        issues: z.objectInputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    }>>;
    queryParameterErrors: z.ZodNullable<z.ZodObject<{
        name: z.ZodLiteral<"ZodError">;
        issues: z.ZodArray<z.ZodObject<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, "strip", z.ZodAny, z.objectOutputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">, z.objectInputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">>, "many">;
    }, "strip", z.ZodTypeAny, {
        name: "ZodError";
        issues: z.objectOutputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    }, {
        name: "ZodError";
        issues: z.objectInputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    }>>;
    bodyErrors: z.ZodNullable<z.ZodObject<{
        name: z.ZodLiteral<"ZodError">;
        issues: z.ZodArray<z.ZodObject<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, "strip", z.ZodAny, z.objectOutputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">, z.objectInputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">>, "many">;
    }, "strip", z.ZodTypeAny, {
        name: "ZodError";
        issues: z.objectOutputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    }, {
        name: "ZodError";
        issues: z.objectInputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    }>>;
}, "strip", z.ZodTypeAny, {
    pathParameterErrors: {
        name: "ZodError";
        issues: z.objectOutputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    } | null;
    headerErrors: {
        name: "ZodError";
        issues: z.objectOutputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    } | null;
    queryParameterErrors: {
        name: "ZodError";
        issues: z.objectOutputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    } | null;
    bodyErrors: {
        name: "ZodError";
        issues: z.objectOutputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    } | null;
}, {
    pathParameterErrors: {
        name: "ZodError";
        issues: z.objectInputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    } | null;
    headerErrors: {
        name: "ZodError";
        issues: z.objectInputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    } | null;
    queryParameterErrors: {
        name: "ZodError";
        issues: z.objectInputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    } | null;
    bodyErrors: {
        name: "ZodError";
        issues: z.objectInputType<{
            path: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">;
            message: z.ZodOptional<z.ZodString>;
            code: z.ZodNativeEnum<{
                invalid_type: "invalid_type";
                invalid_literal: "invalid_literal";
                custom: "custom";
                invalid_union: "invalid_union";
                invalid_union_discriminator: "invalid_union_discriminator";
                invalid_enum_value: "invalid_enum_value";
                unrecognized_keys: "unrecognized_keys";
                invalid_arguments: "invalid_arguments";
                invalid_return_type: "invalid_return_type";
                invalid_date: "invalid_date";
                invalid_string: "invalid_string";
                too_small: "too_small";
                too_big: "too_big";
                invalid_intersection_types: "invalid_intersection_types";
                not_multiple_of: "not_multiple_of";
                not_finite: "not_finite";
            }>;
        }, z.ZodAny, "strip">[];
    } | null;
}>;
